//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input/Input_Map.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Input_Map: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Input_Map()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input_Map"",
    ""maps"": [
        {
            ""name"": ""Girl_Map"",
            ""id"": ""b33fd016-d214-4b3c-9651-a8aff4050118"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""7eb04ed6-9a52-4bc3-b8f4-c1ccc42f794c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""1282f11a-9e95-4ea3-a41b-e68a1c70c5da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Especial"",
                    ""type"": ""Button"",
                    ""id"": ""389174c4-874d-4511-b5d2-a187d4cee668"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""00c84318-f335-4730-b6ec-0e315fb48aaf"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c1c53e57-fbab-424d-9e1d-25dbb407ed12"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ca93c2f5-07e6-4a40-b337-1ec88f3be4f4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""11dde8a5-80cf-49e9-9466-dfb4b418a554"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ec4c2fab-5c1b-4ebc-81b5-fa03e1dd5a04"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0b84dc3e-6a86-499c-96d8-e3a2d7f2b3d2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b7f28c6-ab32-4715-bd15-5ac39a27b3b5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Especial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Boy_Map"",
            ""id"": ""79c16e85-81e8-45e0-93ad-1a4dcd600045"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""8b94fd55-235d-4085-a673-09f5b1f3c085"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""17d2bdfa-fb6f-4095-b465-b7e5c46493b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Especial"",
                    ""type"": ""Button"",
                    ""id"": ""a68f9de2-c36b-4cfe-aff7-7844a0b9b94b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Cruzeta"",
                    ""id"": ""8d984110-97d5-4348-abc2-fe19e838d753"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""72ec5254-81c8-44da-9d91-b0fdc8e18946"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""035f7475-bf30-4c7d-981b-6fdc8ae43fcc"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2bb0ee3e-61cf-4806-a1a1-efdcc5e78ea0"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5a8dda72-ce17-4d71-9df5-4c4e6f9ac4c2"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""e0b4cf55-d494-4e2a-86a8-013993c7efb5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ebf76419-9ae1-48fb-aebd-31ff6b15e460"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1fa57468-6c82-4d14-983d-d437afb2eb91"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6d9910e5-41d2-4a53-a98f-cec28dab87dd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f0536447-ed46-43c7-9fed-feb8034f5e6b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5d0ce4e1-8c39-44b1-bbc7-8148aa0ee98d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1151be11-c22d-4e23-8423-90ad12a02cb7"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1caa6b9b-1e7b-4e98-9af6-d39784b449f2"",
                    ""path"": ""<Keyboard>/comma"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4a17b33-1daa-465e-86b2-cd88105e4547"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Especial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d8f2951-7857-4290-9976-6ba305855a78"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Especial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8dbf59a-6279-4fbb-aec4-74b3e0ac9d02"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Especial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Girl_Map
        m_Girl_Map = asset.FindActionMap("Girl_Map", throwIfNotFound: true);
        m_Girl_Map_Movement = m_Girl_Map.FindAction("Movement", throwIfNotFound: true);
        m_Girl_Map_Attack = m_Girl_Map.FindAction("Attack", throwIfNotFound: true);
        m_Girl_Map_Especial = m_Girl_Map.FindAction("Especial", throwIfNotFound: true);
        // Boy_Map
        m_Boy_Map = asset.FindActionMap("Boy_Map", throwIfNotFound: true);
        m_Boy_Map_Movement = m_Boy_Map.FindAction("Movement", throwIfNotFound: true);
        m_Boy_Map_Attack = m_Boy_Map.FindAction("Attack", throwIfNotFound: true);
        m_Boy_Map_Especial = m_Boy_Map.FindAction("Especial", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Girl_Map
    private readonly InputActionMap m_Girl_Map;
    private List<IGirl_MapActions> m_Girl_MapActionsCallbackInterfaces = new List<IGirl_MapActions>();
    private readonly InputAction m_Girl_Map_Movement;
    private readonly InputAction m_Girl_Map_Attack;
    private readonly InputAction m_Girl_Map_Especial;
    public struct Girl_MapActions
    {
        private @Input_Map m_Wrapper;
        public Girl_MapActions(@Input_Map wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Girl_Map_Movement;
        public InputAction @Attack => m_Wrapper.m_Girl_Map_Attack;
        public InputAction @Especial => m_Wrapper.m_Girl_Map_Especial;
        public InputActionMap Get() { return m_Wrapper.m_Girl_Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Girl_MapActions set) { return set.Get(); }
        public void AddCallbacks(IGirl_MapActions instance)
        {
            if (instance == null || m_Wrapper.m_Girl_MapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Girl_MapActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Especial.started += instance.OnEspecial;
            @Especial.performed += instance.OnEspecial;
            @Especial.canceled += instance.OnEspecial;
        }

        private void UnregisterCallbacks(IGirl_MapActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Especial.started -= instance.OnEspecial;
            @Especial.performed -= instance.OnEspecial;
            @Especial.canceled -= instance.OnEspecial;
        }

        public void RemoveCallbacks(IGirl_MapActions instance)
        {
            if (m_Wrapper.m_Girl_MapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGirl_MapActions instance)
        {
            foreach (var item in m_Wrapper.m_Girl_MapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Girl_MapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Girl_MapActions @Girl_Map => new Girl_MapActions(this);

    // Boy_Map
    private readonly InputActionMap m_Boy_Map;
    private List<IBoy_MapActions> m_Boy_MapActionsCallbackInterfaces = new List<IBoy_MapActions>();
    private readonly InputAction m_Boy_Map_Movement;
    private readonly InputAction m_Boy_Map_Attack;
    private readonly InputAction m_Boy_Map_Especial;
    public struct Boy_MapActions
    {
        private @Input_Map m_Wrapper;
        public Boy_MapActions(@Input_Map wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Boy_Map_Movement;
        public InputAction @Attack => m_Wrapper.m_Boy_Map_Attack;
        public InputAction @Especial => m_Wrapper.m_Boy_Map_Especial;
        public InputActionMap Get() { return m_Wrapper.m_Boy_Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Boy_MapActions set) { return set.Get(); }
        public void AddCallbacks(IBoy_MapActions instance)
        {
            if (instance == null || m_Wrapper.m_Boy_MapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Boy_MapActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Especial.started += instance.OnEspecial;
            @Especial.performed += instance.OnEspecial;
            @Especial.canceled += instance.OnEspecial;
        }

        private void UnregisterCallbacks(IBoy_MapActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Especial.started -= instance.OnEspecial;
            @Especial.performed -= instance.OnEspecial;
            @Especial.canceled -= instance.OnEspecial;
        }

        public void RemoveCallbacks(IBoy_MapActions instance)
        {
            if (m_Wrapper.m_Boy_MapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBoy_MapActions instance)
        {
            foreach (var item in m_Wrapper.m_Boy_MapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Boy_MapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Boy_MapActions @Boy_Map => new Boy_MapActions(this);
    public interface IGirl_MapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnEspecial(InputAction.CallbackContext context);
    }
    public interface IBoy_MapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnEspecial(InputAction.CallbackContext context);
    }
}
